{"name": "test_login", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x005D8893+48451]\n\t(No symbol) [0x0056B8A1]\n\t(No symbol) [0x00475058]\n\t(No symbol) [0x004A0467]\n\t(No symbol) [0x004A069B]\n\t(No symbol) [0x004CDD92]\n\t(No symbol) [0x004BA304]\n\t(No symbol) [0x004CC482]\n\t(No symbol) [0x004BA0B6]\n\t(No symbol) [0x00497E08]\n\t(No symbol) [0x00498F2D]\n\tGetHandleVerifier [0x00838E3A+2540266]\n\tGetHandleVerifier [0x00878959+2801161]\n\tGetHandleVerifier [0x0087295C+2776588]\n\tGetHandleVerifier [0x00662280+612144]\n\t(No symbol) [0x00574F6C]\n\t(No symbol) [0x005711D8]\n\t(No symbol) [0x005712BB]\n\t(No symbol) [0x00564857]\n\tBaseThreadInitThunk [0x75556359+25]\n\tRtlGetAppContainerNamedObjectPath [0x77947B74+228]\n\tRtlGetAppContainerNamedObjectPath [0x77947B44+180]", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ffc6747856cbeb985ee623cacb6ac470\")>\n\n    def test_login(driver):\n        driver.get('http://159.89.38.11/')\n    \n        #Input email\n        email_input = WebDriverWait(driver, 5).until(EC.presence_of_element_located((By.XPATH, \"//input[@id='email-1']\")))\n        email_input.clear()\n        email_input.send_keys(\"test@orangetoolz.com\")\n    \n        #Input password\n        password_input = WebDriverWait(driver, 5).until(EC.presence_of_element_located((By.XPATH, \"//input[@id='password-1']\")))\n        password_input.clear()\n        password_input.send_keys(\"8Kh8nTe*^jdk\")\n    \n        #Login\n        login = driver.find_element(By.XPATH, \"/html[1]/body[1]/div[2]/div[1]/div[1]/div[1]/div[2]/div[1]/form[1]/div[4]/button[1]\")\n        login.click()\n    \n        # Wait for the site to finish loading\n        wait = WebDriverWait(driver, 10)\n        wait.until(EC.title_contains(\"Dashboard\"))\n    \n         # Assertion for successful login\n        assert \"Dashboard\" in driver.title\n    \n    \n        #'Contact Manage'\n        contact_manage_link = driver.find_element(By.XPATH, \"//i[@class='fas fa-id-card fa-lg']\")\n        contact_manage_link.click()\n    \n        #'Contact Manage' text to be visible\n        contact_manage_text = WebDriverWait(driver, 10).until(EC.visibility_of_element_located((By.XPATH, \"//span[normalize-space()='Contact Manage']\")))\n    \n        #'Contact Manage'\n        contact_manage_text.click()\n    \n        #Add contact\n        add_contact = WebDriverWait(driver, 15).until(EC.visibility_of_element_located((By.XPATH, \"//a[normalize-space()='Add Contact']\")))\n        add_contact.click()\n    \n        add_grp = WebDriverWait(driver, 15).until(EC.visibility_of_element_located((By.XPATH, \"//span[normalize-space()='Add New Group']\")))\n        add_grp.click()\n    \n        number_input = WebDriverWait(driver, 15).until(EC.visibility_of_element_located((By.XPATH, \"//input[@name='name']\")))\n        number_input.clear()\n        number_input.send_keys(\"automation962023\")\n    \n        number_input = WebDriverWait(driver, 15).until(EC.visibility_of_element_located((By.XPATH, \"//textarea[@placeholder='Write your group description here...']\")))\n        number_input.clear()\n        number_input.send_keys(\"This is automation 962023\")\n    \n        close_tag = WebDriverWait(driver,15).until(EC.visibility_of_element_located((By.XPATH, \"//button[normalize-space()='Close']\")))\n        print('close_tag', close_tag)\n        close_tag.click()\n    \n        checkboxes = WebDriverWait(driver,15).until(EC.presence_of_all_elements_located((By.XPATH, \"//label[@for='checkbox-4-03' or @for='checkbox-4-0269' or @for='checkbox-4-0270']\")))\n        for checkbox in checkboxes:\n            checkbox.click()\n    \n    \n        #number_input = WebDriverWait(driver, 15).until(EC.visibility_of_element_located((By.XPATH, \"//input[@placeholder='Enter Number']\")))\n        #number_input.clear()\n        #number_input.send_keys(\"99\")\n    \n    \n    \n        number_input = WebDriverWait(driver, 15).until(EC.visibility_of_element_located((By.XPATH, \"//input[@placeholder='Enter Number']\")))\n        number_input.clear()\n    \n        while True:\n            number = random.randint(1, 100)  # Generate a random number between 1 and 100\n    \n            number_input.send_keys(str(number))  # Convert the number to a string and send it to the input field\n    \n            # Wait for the error message to  timeout\n            try:\n                error_message = WebDriverWait(driver, 5).until(EC.visibility_of_element_located((By.XPATH, \"//span[contains(text(),'The number has already been taken.')]\")))\n                print(error_message)\n                if error_message:\n                    number_input.clear()\n                continue\n            except TimeoutException:\n                break\n    \n    \n        number_input_email = WebDriverWait(driver, 15).until(EC.visibility_of_element_located((By.XPATH, \"//input[@placeholder='Enter Email address']\")))\n        number_input_email.clear()\n        number_input_email.send_keys(\"automation96@gmail.com\")\n    \n    \n        number_input_first_name = WebDriverWait(driver, 15).until(EC.visibility_of_element_located((By.XPATH, \"//input[@placeholder='Enter First name']\")))\n        number_input_first_name.clear()\n        number_input_first_name.send_keys(\"automation96\")\n    \n        number_input_last_name = WebDriverWait(driver, 15).until(EC.visibility_of_element_located((By.XPATH, \"//input[@placeholder='Enter Last name']\")))\n        number_input_last_name.clear()\n        number_input_last_name.send_keys(\"test\")\n    \n        birthday_input = WebDriverWait(driver, 15).until(EC.visibility_of_element_located((By.XPATH, \"//input[@placeholder='Enter your birthday']\")))\n        birthday_input.clear()\n        birthday_input.send_keys(\"1990-01-01\")\n    \n        number_input_city = WebDriverWait(driver, 15).until(EC.visibility_of_element_located((By.XPATH, \"//input[@placeholder='Enter your city']\")))\n        number_input_city.clear()\n        number_input_city.send_keys(\"mohammadpur\")\n    \n        number_input_state = WebDriverWait(driver, 15).until(EC.visibility_of_element_located((By.XPATH, \"//input[@placeholder='Enter your state']\")))\n        number_input_state.clear()\n        number_input_state.send_keys(\"adabor\")\n    \n        number_input_country = WebDriverWait(driver, 15).until(EC.visibility_of_element_located((By.XPATH, \"//input[@placeholder='Enter your country']\")))\n        number_input_country.clear()\n        number_input_country.send_keys(\"Bangladesh\")\n    \n        number_input_zip = WebDriverWait(driver, 15).until(EC.visibility_of_element_located((By.XPATH, \"//input[@placeholder='Enter your Zip']\")))\n        number_input_zip.clear()\n        number_input_zip.send_keys(\"adabor\")\n    \n    \n        number_address = WebDriverWait(driver, 15).until(EC.visibility_of_element_located((By.XPATH, \"//textarea[@placeholder='Enter your address']\")))\n        number_address.clear()\n        number_address.send_keys(\"Dhaka,Mohammadpur,Adabor,1207\")\n    \n        add_data = WebDriverWait(driver, 15).until(EC.visibility_of_element_located((By.XPATH, \"//button[normalize-space()='Add Contact']\")))\n        add_data.click()\n    \n        # Assertion for successful contact addition\n>       success_message = WebDriverWait(driver, 20).until(EC.visibility_of_element_located((By.XPATH, \"//span[contains(text(), 'Contact added successfully.')]\")))\n\nallure_report.py:142: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"ffc6747856cbeb985ee623cacb6ac470\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000001F1164D9900>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x005D8893+48451]\nE       \t(No symbol) [0x0056B8A1]\nE       \t(No symbol) [0x00475058]\nE       \t(No symbol) [0x004A0467]\nE       \t(No symbol) [0x004A069B]\nE       \t(No symbol) [0x004CDD92]\nE       \t(No symbol) [0x004BA304]\nE       \t(No symbol) [0x004CC482]\nE       \t(No symbol) [0x004BA0B6]\nE       \t(No symbol) [0x00497E08]\nE       \t(No symbol) [0x00498F2D]\nE       \tGetHandleVerifier [0x00838E3A+2540266]\nE       \tGetHandleVerifier [0x00878959+2801161]\nE       \tGetHandleVerifier [0x0087295C+2776588]\nE       \tGetHandleVerifier [0x00662280+612144]\nE       \t(No symbol) [0x00574F6C]\nE       \t(No symbol) [0x005711D8]\nE       \t(No symbol) [0x005712BB]\nE       \t(No symbol) [0x00564857]\nE       \tBaseThreadInitThunk [0x75556359+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77947B74+228]\nE       \tRtlGetAppContainerNamedObjectPath [0x77947B44+180]\n\nautomation\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException"}, "attachments": [{"name": "stdout", "source": "72d713e0-e539-465f-a5c0-16779e478444-attachment.txt", "type": "text/plain"}], "start": 1686202505915, "stop": 1686202551470, "uuid": "af5b6dfe-4349-426f-bad0-60078e3acadb", "historyId": "6b96cdebe3b18d1f451a4b81b33314e4", "testCaseId": "6b96cdebe3b18d1f451a4b81b33314e4", "fullName": "allure_report#test_login", "labels": [{"name": "suite", "value": "allure_report"}, {"name": "host", "value": "DESKTOP-93NIJVK"}, {"name": "thread", "value": "46560-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "allure_report"}]}